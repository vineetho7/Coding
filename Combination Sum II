40. Combination Sum II
Medium
8.8K
226
Companies
Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.

Each number in candidates may only be used once in the combination.

Note: The solution set must not contain duplicate combinations.

 

Example 1:

Input: candidates = [10,1,2,7,6,1,5], target = 8
Output: 
[
[1,1,6],
[1,2,5],
[1,7],
[2,6]
]
Example 2:

Input: candidates = [2,5,2,1,2], target = 5
Output: 
[
[1,2,2],
[5]
]





class Solution {

    void bt(vector<int>& candidates,vector<vector<int>>&ans,vector<int>&s, int target, int i){

        if(target==0){
            // sort(s.begin(),s.end());
            ans.push_back(s);
            return;
        }
        // else if(target<0 || i>=candidates.size()){
        //     return;
        // }
        else {
            for(int j=i;j<candidates.size()&& target >= candidates[j];j++){
                if(j>i && candidates[j] == candidates[j - 1]){
                    continue;
                }

            
            s.push_back(candidates[j]);
            bt(candidates,ans,s,target-candidates[j],j+1);
            s.pop_back();
            //bt(candidates,ans,s,target,j+1);
            }

        }


    }

public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> s;
        sort(candidates.begin(),candidates.end());

        bt(candidates,ans,s,target,0);
        vector<vector<int>> a;
        
        return ans;
        
    }
};

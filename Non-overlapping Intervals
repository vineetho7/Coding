435. Non-overlapping Intervals
Medium
6K
163
Companies
Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.

 

Example 1:

Input: intervals = [[1,2],[2,3],[3,4],[1,3]]
Output: 1
Explanation: [1,3] can be removed and the rest of the intervals are non-overlapping.
Example 2:

Input: intervals = [[1,2],[1,2],[1,2]]
Output: 2
Explanation: You need to remove two [1,2] to make the rest of the intervals non-overlapping.


class Solution {
public:
    static bool comp(vector<int>&a,vector<int>&b){
        return a[1]<b[1];
    }
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {

        sort(intervals.begin(),intervals.end(),comp);

        for(int i=0;i<intervals.size();i++){
            cout<<intervals[i][0]<<". "<<intervals[i][1]<<endl;
        }

        int prev=intervals[0][1];
        int ans=0;

        for(int i=1;i<intervals.size();i++){
            if(intervals[i][0]<prev){
                ans++;
            }
            else{
                prev=intervals[i][1];
            }
        }
        return ans;
        
    }
};

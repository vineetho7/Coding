451. Sort Characters By Frequency
Medium
6.8K
230
Companies
Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.

Return the sorted string. If there are multiple answers, return any of them.

 

Example 1:

Input: s = "tree"
Output: "eert"
Explanation: 'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.
Example 2:

Input: s = "cccaaa"
Output: "aaaccc"
Explanation: Both 'c' and 'a' appear three times, so both "cccaaa" and "aaaccc" are valid answers.
Note that "cacaca" is incorrect, as the same characters must be together.

class Solution {
public:
    string frequencySort(string s) {

        map<char,int>m;
        for(auto i: s){
            m[i]++;
        }
        priority_queue<pair<int,char>>pq;

        for(auto a:s){
            pq.push({m[a],a});

        }

        string res="";
        while(!pq.empty()){
            res+=pq.top().second;
            pq.pop();
        }
        return res;
        
    }
};

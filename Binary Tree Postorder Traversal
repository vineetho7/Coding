145. Binary Tree Postorder Traversal
Easy
6.1K
174
Companies
Given the root of a binary tree, return the postorder traversal of its nodes' values.

 

Example 1:


Input: root = [1,null,2,3]
Output: [3,2,1]
Example 2:

Input: root = []
Output: []

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<int>v;
public:
    vector<int> postorderTraversal(TreeNode* root) {

        if(root == NULL){
            return v;
        }
        
        postorderTraversal(root->left);
        
        postorderTraversal(root->right);
        v.push_back(root->val);
        return v;

        
    }
};

1260. Shift 2D Grid
Easy
1.6K
331
Companies
Given a 2D grid of size m x n and an integer k. You need to shift the grid k times.

In one shift operation:

Element at grid[i][j] moves to grid[i][j + 1].
Element at grid[i][n - 1] moves to grid[i + 1][0].
Element at grid[m - 1][n - 1] moves to grid[0][0].
Return the 2D grid after applying shift operation k times.

 

Example 1:


Input: grid = [[1,2,3],[4,5,6],[7,8,9]], k = 1
Output: [[9,1,2],[3,4,5],[6,7,8]]

class Solution {
public:
    vector<vector<int>> shiftGrid(vector<vector<int>>& grid, int k) {
        int r= grid.size();
        int c=grid[0].size();
        vector<vector<int>>ans(r,vector<int>(c));

        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                int newr=(i+(j+k)/c)%r;

                int newc=(j+k)%c;
                ans[newr][newc]=grid[i][j];
            }
        }
        return ans;

        
        
    }
};

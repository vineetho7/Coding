238. Product of Array Except Self
Medium
18K
989
Companies
Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.


class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        //     int n=nums.size();
        // vector<int> ans(n);
        // vector<int>l(n);
        // vector<int>r(n);
        // l[0]=1;
        // r[n-1]=1;

        // for(int i=1;i<nums.size();i++){
        //     l[i]=l[i-1]*nums[i-1];
        // }

        // for(int i=nums.size()-2;i>=0;i--){
        //     r[i]=r[i+1]*nums[i+1];
        // }

        // for(int i=0;i<nums.size();i++){
        //     ans[i]=l[i]*r[i];
        // }
        // return ans;

        int l=nums.size();
        vector<int>ans(l);
        ans[0]=1;
        for(int i=1;i<l;i++){
            ans[i]=ans[i-1]*nums[i-1];

        }
        int x= 1;
        for(int i=l-1;i>=0;i--){
            ans[i]=ans[i]*x;
            x=x*nums[i];

        }
        return ans;
        
    }
};

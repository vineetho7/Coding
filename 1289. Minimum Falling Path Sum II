1289. Minimum Falling Path Sum II
Attempted
Hard
Topics
Companies
Hint
Given an n x n integer matrix grid, return the minimum sum of a falling path with non-zero shifts.

A falling path with non-zero shifts is a choice of exactly one element from each row of grid such that no two elements chosen in adjacent rows are in the same column.

 

Example 1:


Input: grid = [[1,2,3],[4,5,6],[7,8,9]]
Output: 13
Explanation: 
The possible falling paths are:
[1,5,9], [1,5,7], [1,6,7], [1,6,8],
[2,4,8], [2,4,9], [2,6,7], [2,6,8],
[3,4,8], [3,4,9], [3,5,7], [3,5,9]
The falling path with the smallest sum is [1,5,7], so the answer is 13.
Example 2:

Input: grid = [[7]]
Output: 7


class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& grid) {

        int r=grid.size();
        int c=grid[0].size();
        vector<vector<int>>dp(r,vector<int>(r,0));
        for(int i=0;i<grid.size();i++){
            dp[0][i]=grid[0][i];
        }

        for(int i=1;i<r;i++){
            for(int j=0;j<c;j++){
                int a=INT_MAX;
                for(int k=0;k<r;k++){
                    if(j==k)continue;
                    a=min(a,dp[i-1][k]);
                }
                dp[i][j]=grid[i][j]+a;
                //grid[i][j]+=min(j-1>=0?grid[i-1][j-1]:INT_MAX,j+1<c?grid[i-1][j+1]:INT_MAX);
                
            }
        }
        int m=INT_MAX;

        for(int k=0;k<c;k++){
            if(m>dp[r-1][k]){
                m=dp[r-1][k];
            }
            

        }
        return m;
        
    }
};

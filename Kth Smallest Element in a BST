Kth Smallest Element in a BST
Medium
9.9K
179
Companies
Given the root of a binary search tree, and an integer k, return the kth smallest value (1-indexed) of all the values of the nodes in the tree.

 

Example 1:


Input: root = [3,1,4,null,2], k = 1
Output: 1


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {

        priority_queue<int>pq;
        iterat(root,k,pq);
        return pq.top();
        
    }
    
    void iterat(TreeNode* root, int k,priority_queue<int>& pq ){
        if(root == NULL){
            return;
        }
        else{
            iterat(root->left,k,pq);
            pq.push(root->val);
            if(pq.size()>k){
                pq.pop();
            }
            iterat(root->right,k,pq);
        }
    }

};

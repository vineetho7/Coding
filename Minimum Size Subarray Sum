209. Minimum Size Subarray Sum
Medium
10.6K
297
Companies
Given an array of positive integers nums and a positive integer target, return the minimal length of a 
subarray
 whose sum is greater than or equal to target. If there is no such subarray, return 0 instead.

 

Example 1:

Input: target = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: The subarray [4,3] has the minimal length under the problem constraint.
Example 2:

Input: target = 4, nums = [1,4,4]
Output: 1

class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {

        int ans=0;
        int left=0;
        int l=INT_MAX;


        for(int i=0;i<nums.size();i++){
            ans=ans+nums[i];

            if(ans>= target){
                cout<<nums[i]<< " "<<left<<endl;
                l=min(l,i-left+1);

            }
            while(ans>=target){
                l=min(l,i-left+1);
                ans=ans-nums[left];
                left++;
                
            }
        }
        if(l!=INT_MAX){
            return l;

        }
        return 0;
        
        
    }
};

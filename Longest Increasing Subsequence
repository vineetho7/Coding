300. Longest Increasing Subsequence
Medium
17.9K
340
Companies
Given an integer array nums, return the length of the longest strictly increasing 
subsequence
.

 

Example 1:

Input: nums = [10,9,2,5,3,7,101,18]
Output: 4
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.
Example 2:

Input: nums = [0,1,0,3,2,3]
Output: 4
Example 3:

Input: nums = [7,7,7,7,7,7,7]
Output: 1


class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {


        vector<int>dp(nums.size(),1);

        int maxx=1;

        for(int i=1;i<nums.size();i++){
            for(int j=0;j<i;j++){

                //cout<<"i. "<<nums[i]<<". j"<<nums[j]<<endl;
                if(nums[i]>nums[j]){
                    dp[i]=max(dp[i],dp[j]+1);

                }
                
            }
            maxx=max(maxx,dp[i]);
        }

        return maxx;

        
        
    }
};

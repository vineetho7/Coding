202. Happy Number
Easy
8.9K
1.2K
Companies
Write an algorithm to determine if a number n is happy.

A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.

 

Example 1:

Input: n = 19
Output: true
Explanation:
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1


class Solution {
public:
    bool isHappy(int n) {

        map<int,int>m;

        if(n==1){
            return true;
        }

        while(n!=1){
            int sum=0;
            int cur=n;

            while(cur){
                int sin= cur%10;
                sum =sum+ sin*sin;
                cur=cur/10;
            }

            if(m.find(sum)!=m.end()){
                return false;
            }
            m[sum]++;
            n=sum;
        }

        return true;

        
    }
};

2089. Find Target Indices After Sorting Array
Easy
1.5K
67
Companies
You are given a 0-indexed integer array nums and a target element target.

A target index is an index i such that nums[i] == target.

Return a list of the target indices of nums after sorting nums in non-decreasing order. If there are no target indices, return an empty list. The returned list must be sorted in increasing order.

 

Example 1:

Input: nums = [1,2,5,2,3], target = 2
Output: [1,2]
Explanation: After sorting, nums is [1,2,2,3,5].
The indices where nums[i] == 2 are 1 and 2.


class Solution {
public:

    int first(vector<int>& nums, int target){
        int l=0;
        int r=nums.size()-1;
        int ans=-1;

        while(l<=r){
            
            int mid=(l+r)/2;

            cout<<l<<"---"<<r<<"--"<<mid<<endl;
            if(nums[mid]==target){
                ans=mid;
                r=mid-1;

            }
            else if(nums[mid]>target){
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;

    }
    int last(vector<int>& nums, int target){

        int l=0;
        int r=nums.size()-1;
        int ans=-1;

        while(l<=r){
            cout<<"22222222"<<endl;
            int mid=(l+r)/2;
            if(nums[mid]==target){
                ans=mid;
                l=mid+1;

            }
            else if(nums[mid]>target){
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;


    }
    vector<int> targetIndices(vector<int>& nums, int target) {
        vector<int>v;
        sort(nums.begin(),nums.end());
        int x=first(nums,target);
        if(x== -1){
            return {};
        }


        //v.push_back(x);
        int y= last(nums,target);
        // if(x!=y){
        //     v.push_back(y);

        // }
        for(int i=x;i<=y;i++){
            v.push_back(i);
        }
        
        return v;
        
    }
};


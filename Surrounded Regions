130. Surrounded Regions
Medium
7.5K
1.6K
Companies
Given an m x n matrix board containing 'X' and 'O', capture all regions that are 4-directionally surrounded by 'X'.

A region is captured by flipping all 'O's into 'X's in that surrounded region.

 

Example 1:


Input: board = [["X","X","X","X"],["X","O","O","X"],["X","X","O","X"],["X","O","X","X"]]
Output: [["X","X","X","X"],["X","X","X","X"],["X","X","X","X"],["X","O","X","X"]]
Explanation: Notice that an 'O' should not be flipped if:
- It is on the border, or
- It is adjacent to an 'O' that should not be flipped.
The bottom 'O' is on the border, so it is not flipped.
The other three 'O' form a surrounded region, so they are flipped.
Example 2:

Input: board = [["X"]]
Output: [["X"]]



class Solution {
public:
int r;
int c;

    void dfs(vector<vector<char>>& board, vector<vector<int>>& vis,int row,int col){
        if (row < 0 || row >= r || col < 0 || col >= c || board[row][col] == 'X' || vis[row][col] == 1) {
        return;
        }
        vis[row][col]=1;

        
            
            dfs(board,vis,row+1,col);
        
        //if(row<r && row-1>=0 && col<c && col>=0){
            
            dfs(board,vis,row-1,col);
        //}
        //if(row<r && row>=0 && col+1<c && col>=0){
           
            dfs(board,vis,row,col+1);
        //}
        //if(row<r && row>=0 && col<c && col-1>=0){
           
            dfs(board,vis,row,col-1);
        //}

    }

    void solve(vector<vector<char>>& board) {
         r= board.size();
         c=board[0].size();


        vector<vector<int>>vis(r,vector<int>(c,0));
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(i==0 || j==0 || i==r-1 || j== c-1 ){
                    
                    dfs(board,vis,i,j);
                }
            }
        }

        cout<<"------";

        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(vis[i][j]==0){
                    cout<<"check"<<endl;
                    board[i][j]='X';
                }
                else{
                    cout<<"check111"<<endl;
                    board[i][j]='O';
                }

            }
        }
        
    }
};

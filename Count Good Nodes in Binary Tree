1448. Count Good Nodes in Binary Tree
Medium
5K
131
Companies
Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.

Return the number of good nodes in the binary tree.

 

Example 1:



Input: root = [3,1,4,3,null,1,5]
Output: 4
Explanation: Nodes in blue are good.
Root Node (3) is always a good node.
Node 4 -> (3,4) is the maximum value in the path starting from the root.
Node 5 -> (3,4,5) is the maximum value in the path
Node 3 -> (3,1,3) is the maximum value in the path.


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int ans=0;
    void trav(TreeNode* root,int val){
        if(!root){
            return;
        }
        if(root->val>=val){
            val=root->val;
            ans++;
        }
        trav(root->left,val);
        trav(root->right,val);
    }
    int goodNodes(TreeNode* root) {

        if(root== NULL){
            return 0;
        }
        trav(root,root->val);
        return ans;
        
    }
};

115. Distinct Subsequences
Hard
6.4K
280
company
Google
company
Amazon
company
TikTok
Given two strings s and t, return the number of distinct subsequences of s which equals t.

The test cases are generated so that the answer fits on a 32-bit signed integer.

 

Example 1:

Input: s = "rabbbit", t = "rabbit"
Output: 3
Explanation:
As shown below, there are 3 ways you can generate "rabbit" from s.
rabbbit
rabbbit
rabbbit
Example 2:

Input: s = "babgbag", t = "bag"
Output: 5
Explanation:
As shown below, there are 5 ways you can generate "bag" from s.
babgbag
babgbag
babgbag
babgbag
babgbag


class Solution {
public:
    int numDistinct(string s, string t) {

        int m= s.size();
        int n= t.size();
        vector<vector<double> >dp(m+1,vector<double>(n+1,0));
        for(int i=0;i<=m;i++) dp[i][0] = 1;
        for(int j=1;j<=n;j++) dp[0][j] = 0;
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(s[i-1]==t[j-1]){
                    dp[i][j]=dp[i-1][j-1]+dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[m][n];
        
    }
};

931. Minimum Falling Path Sum
Solved
Medium
Topics
Companies
Given an n x n array of integers matrix, return the minimum sum of any falling path through matrix.

A falling path starts at any element in the first row and chooses the element in the next row that is either directly below or diagonally left/right. Specifically, the next element from position (row, col) will be (row + 1, col - 1), (row + 1, col), or (row + 1, col + 1).

 

Example 1:


Input: matrix = [[2,1,3],[6,5,4],[7,8,9]]
Output: 13
Explanation: There are two falling paths with a minimum sum as shown.
Example 2:


Input: matrix = [[-19,57],[-40,-5]]
Output: -59
Explanation: The falling path with a minimum sum is shown.

class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {

        int r=matrix.size();
        int c=matrix[0].size();

        for(int i=1;i<r;i++){
            for(int j=0;j<c;j++){
                matrix[i][j]+=min(j-1>=0?matrix[i-1][j-1]:INT_MAX,min(matrix[i-1][j],j+1<c?matrix[i-1][j+1]:INT_MAX));
                
            }
        }
        int m=INT_MAX;

        for(int k=0;k<c;k++){
            if(m>matrix[r-1][k]){
                m=matrix[r-1][k];
            }
            

        }
        return m;
        
    }
};
 

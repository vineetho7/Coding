21. Merge Two Sorted Lists
Easy
18.7K
1.7K
Companies
You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:


Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: list1 = [], list2 = []
Output: []

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* temp1=new ListNode();
        ListNode* temp2=temp1;

        while(list1 && list2){
            if(list1->val<list2->val){
                temp2->next=list1;
                temp2=list1;
                list1=list1->next;
            }
            else{
                temp2->next=list2;
                temp2=list2;
                list2=list2->next;

            }
            
        }
        if(list1){
            temp2->next=list1;
        }
        if(list2){
            temp2->next=list2;
        }
    return temp1->next;


        
    }
};

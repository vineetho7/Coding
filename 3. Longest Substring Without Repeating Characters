class Solution {
public:
    int lengthOfLongestSubstring(string s) {

        vector<int> map(128,0);
        int counter=0; // check whether the substring is valid
        int begin=0, end=0; //two pointers, one point to tail and 
        int d=0; //the length of substring

        //for() { /* initialize the hash map here */ }

        while(end<s.size()){

            if(map[s[end++]]++ >0 ){  
                counter++;
                //cout<<counter<<endl;/* modify counter here */ 
                }

            while(counter>0/* counter condition */){ 
                
                 
                 /* update d here if finding minimum*/

                //increase begin to make it invalid/valid again
                
                if(map[s[begin++]]-- >1){ counter--;/*modify counter here*/ }
            }  
            
            d=max(d,end-begin);

            /* update d here if finding maximum*/
        }
        return d;
        
    }
};

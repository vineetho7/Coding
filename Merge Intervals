56. Merge Intervals
Medium
19.5K
662
Companies
Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

 

Example 1:

Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].
Example 2:

Input: intervals = [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.


class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {

        vector<vector<int>>ans;

        int l=0;

        sort(intervals.begin(),intervals.end());

        for(int i=0;i<intervals.size();i++){
            if(ans.empty() || l<intervals[i][0]){
                ans.push_back(intervals[i]);
                l=intervals[i][1]; 

            }
                 else{
                     if(l<intervals[i][1]){
                         l=intervals[i][1];
                         ans.back()[1]=l;
                     }
                     

                     
                 }
        }
        return ans;



        
        
    }
};

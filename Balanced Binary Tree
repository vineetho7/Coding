110. Balanced Binary Tree
Easy
9.2K
517
Companies
Given a binary tree, determine if it is 
height-balanced
.

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: true
Example 2:


Input: root = [1,2,2,3,3,null,null,4,4]
Output: false
Example 3:

Input: root = []
Output: true

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool b=true;
public:
    bool isBalanced(TreeNode* root) {

         height(root);
         return b;
        
    }

    int height(TreeNode* root){
        if(root == NULL){
            return true;
        }
        int l= height(root->left);
        if(!b){return b;}
        int r= height(root->right);
         if(!b){return b;}

        if(abs(l-r)>1){
            b=false;
        }
        return max(l,r)+1;

    }
};

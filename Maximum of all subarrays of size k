
MediumAccuracy: 26.04%Submissions: 291K+Points: 4
Internship Alert!
Become an SDE Intern by topping this monthly leaderboard! 

banner
Given an array arr[] of size N and an integer K. Find the maximum for each and every contiguous subarray of size K.

Example 1:

Input:
N = 9, K = 3
arr[] = 1 2 3 1 4 5 2 3 6
Output: 
3 3 4 5 5 5 6 

//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *arr, int n, int k)
    
    {
        vector<int>ans;
        // for(int i=0;i<n-k+1;i++){
        //     int m=INT_MIN;
        //     for(int j=i;j<i+k;j++){
        //         m=max(m,arr[j]);
                
        //     }
        //     ans.push_back(m);
        // }
        // return ans;
        
        priority_queue<pair<int,int>>pq;
        //priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>>pq;
        for(int i=0;i<k;i++){
            pq.push({arr[i],i});
        }
        ans.push_back(pq.top().first);
        
        for(int i=k;i<n;i++){
            pq.push({arr[i],i});
            while(pq.top().second<=i-k){
               // cout<<"--"<<pq.top().second<<endl;
                pq.pop();
            }
            ans.push_back(pq.top().first);
            
        }
        return ans;
        // your code here
    }
};


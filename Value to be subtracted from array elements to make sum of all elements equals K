Given an integer K and an array, height[] where height[i] denotes the height of the ith tree in a forest. The task is to make a cut of height X from the ground such that exactly K unit wood is collected. If it is not possible, then print -1 else print X.
 

Examples: 

Input: height[] = {1, 2, 1, 2}, K = 2 
Output: 1 
Make a cut at height 1, the updated array will be {1, 1, 1, 1} and 
the collected wood will be {0, 1, 0, 1} i.e. 0 + 1 + 0 + 1 = 2.

Input: height = {1, 1, 2, 2}, K = 1 
Output: -1  

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    int funct(int tree[], int m, int n){
        int sum=0;
        for(int i=n-1;i>=0;i--){
            if(tree[i]-m>0){
                sum+=tree[i]-m;
            }
            else{
                break;
            }
        }
        return sum;
    }
    int find_height(int tree[], int n, int k)
    {
        
        sort(tree,tree+n);
        
        int l=0;
        int h=tree[n-1];
        while(l<=h){
            int mid=(l+h)/2;
            
            int m=funct(tree,mid,n);
            
            if(m==k){
                return mid;
            }
            if(m>k){
                l=mid+1;
            }
            if(m<k){
                h=mid-1;
            }
        }
        return -1;
        
        
        // code here
    }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,k;
        cin>>n;

        int tree[n];
        for(int i=0; i<n; i++)
            cin>>tree[i];
        cin>>k;
        Solution ob;
        cout<< ob.find_height(tree,n,k) << endl;
    }
    return 1;
}
// } Driver Code Ends

34. Find First and Last Position of Element in Sorted Array
Medium
17.4K
424
Companies
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]


class Solution {
public:

    int first(vector<int>& nums, int target){
        int l=0;
        int r=nums.size()-1;
        int ans=-1;

        while(l<=r){
            
            int mid=(l+r)/2;

            cout<<l<<"---"<<r<<"--"<<mid<<endl;
            if(nums[mid]==target){
                ans=mid;
                r=mid-1;

            }
            else if(nums[mid]>target){
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;

    }
    int last(vector<int>& nums, int target){

        int l=0;
        int r=nums.size()-1;
        int ans=-1;

        while(l<=r){
            cout<<"22222222"<<endl;
            int mid=(l+r)/2;
            if(nums[mid]==target){
                ans=mid;
                l=mid+1;

            }
            else if(nums[mid]>target){
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;


    }

    vector<int> searchRange(vector<int>& nums, int target) {

        vector<int>v;

        v.push_back(first(nums,target));
        v.push_back(last(nums,target));
        return v;
        
        
    }
};
